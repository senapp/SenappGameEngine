using Senapp.Engine.Models;

namespace Senapp.Engine.Renderer
{
    public enum Geometries
    {
        Quad,
        Triangle,
        Cube,
        Tetrahedron,
        Pyramid,
        Sphere,
        Octahedron,
        HexagonalPrism
    }
    public class Geometry
    {
        public static float[] GetVertices(Geometries geometry)
        {
            if (geometry == Geometries.Quad)
            {
                float[] vertices =
                {
                    -0.5f,0.5f,0,
                    -0.5f,-0.5f,0,
                    0.5f, -0.5f,0,
                    0.5f, 0.5f,0,
                };
                return vertices;
            }
            else if (geometry == Geometries.Triangle)
            {
                float[] vertices =
                {
                     0, 0.5f,0,
                     -0.5f,-0.5f,0,
                     0.5f,-0.5f,0,
                };
                return vertices;
            }
            else if (geometry == Geometries.Cube)
            {
                float[] vertices = {
                0.5f,0.5f,-0.5f,
                0.5f,-0.5f,-0.5f,
                -0.5f,-0.5f,-0.5f,
                -0.5f,0.5f,-0.5f,

                -0.5f,0.5f,0.5f,
                -0.5f,-0.5f,0.5f,
                0.5f,-0.5f,0.5f,
                0.5f,0.5f,0.5f,

                0.5f,0.5f,0.5f,
                0.5f,-0.5f,0.5f,
                0.5f,-0.5f,-0.5f,
                0.5f,0.5f,-0.5f,

                -0.5f,0.5f,-0.5f,
                -0.5f,-0.5f,-0.5f,
                -0.5f,-0.5f,0.5f,
                -0.5f,0.5f,0.5f,

                0.5f,0.5f,0.5f,
                0.5f,0.5f,-0.5f,
                -0.5f,0.5f,-0.5f,
                -0.5f,0.5f,0.5f,

                -0.5f,-0.5f,0.5f,
                -0.5f,-0.5f,-0.5f,
                0.5f,-0.5f,-0.5f,
                0.5f,-0.5f,0.5f

        };
                return vertices;
            }
            else if (geometry == Geometries.Tetrahedron)
            {
                float[] vertices = {
                      0, 0.5f,0,
                      0.5f,-0.5f,-0.433f,
                     -0.5f,-0.5f,-0.433f,

                      0, 0.5f,0,
                     -0.5f,-0.5f,-0.433f,
                      0,-0.5f,0.567f,

                      0, 0.5f,0,
                      0,-0.5f,0.567f,
                      0.5f,-0.5f,-0.433f,

                      0.5f,-0.5f,-0.433f,
                      0,-0.5f,0.567f,
                     -0.5f,-0.5f,-0.433f,

                };
                return vertices;
            }
            else if (geometry == Geometries.Pyramid)
            {
                float[] vertices = {
                      0, 0.5f,0,
                      0.5f,-0.5f,-0.5f,
                     -0.5f,-0.5f,-0.5f,

                      0, 0.5f,0,
                      -0.5f,-0.5f,0.5f,
                      0.5f,-0.5f,0.5f,

                      0, 0.5f,0,
                     -0.5f,-0.5f,-0.5f,
                      -0.5f,-0.5f,0.5f,

                      0, 0.5f,0,
                      0.5f,-0.5f,0.5f,
                      0.5f,-0.5f,-0.5f,

                       -0.5f,-0.5f,0.5f,
                -0.5f,-0.5f,-0.5f,
                0.5f,-0.5f,-0.5f,
                0.5f,-0.5f,0.5f



                };
                return vertices;
            }
            else if (geometry == Geometries.Sphere)
            {
                float[] vertices = {
 0f,0.980785f,-0.19509f,
0f,0.92388f,-0.382683f,
0f,0.83147f,-0.55557f,
0f,0.707107f,-0.707107f,
0f,0.55557f,-0.83147f,
0f,0.382683f,-0.92388f,
0f,0.19509f,-0.980785f,
0f,0f,-1f,
0f,-0.19509f,-0.980785f,
0f,-0.83147f,-0.55557f,
0.03806f,0.980785f,-0.191342f,
0.074658f,0.92388f,-0.37533f,
0.108386f,0.83147f,-0.544895f,
0.13795f,0.707107f,-0.69352f,
0.162212f,0.55557f,-0.815493f,
0.18024f,0.382683f,-0.906127f,
0.191342f,0.19509f,-0.96194f,
0.19509f,0f,-0.980785f,
0.191342f,-0.19509f,-0.96194f,
0.18024f,-0.382683f,-0.906127f,
0.162212f,-0.55557f,-0.815493f,
0.13795f,-0.707107f,-0.69352f,
0.108386f,-0.83147f,-0.544895f,
0.074658f,-0.92388f,-0.37533f,
0.03806f,-0.980785f,-0.191341f,
0.074658f,0.980785f,-0.18024f,
0.146447f,0.92388f,-0.353553f,
0.212608f,0.83147f,-0.51328f,
0.270598f,0.707107f,-0.653281f,
0.31819f,0.55557f,-0.768178f,
0.353553f,0.382683f,-0.853553f,
0.37533f,0.19509f,-0.906127f,
0.382684f,0f,-0.923879f,
0.37533f,-0.19509f,-0.906127f,
0.353554f,-0.382683f,-0.853553f,
0.31819f,-0.55557f,-0.768178f,
0.270598f,-0.707107f,-0.653281f,
0.212608f,-0.83147f,-0.51328f,
0.146447f,-0.92388f,-0.353553f,
0.074658f,-0.980785f,-0.18024f,
0.108387f,0.980785f,-0.162212f,
0.212608f,0.92388f,-0.31819f,
0.308658f,0.83147f,-0.46194f,
0.392848f,0.707107f,-0.587938f,
0.46194f,0.55557f,-0.691342f,
0.51328f,0.382683f,-0.768178f,
0.544895f,0.19509f,-0.815493f,
0.55557f,0f,-0.831469f,
0.544895f,-0.19509f,-0.815493f,
0.51328f,-0.382683f,-0.768178f,
0.46194f,-0.55557f,-0.691342f,
0.392848f,-0.707107f,-0.587938f,
0.308658f,-0.83147f,-0.46194f,
0.212608f,-0.92388f,-0.318189f,
0.108386f,-0.980785f,-0.162211f,
0.13795f,0.980785f,-0.13795f,
0.270598f,0.92388f,-0.270598f,
0.392848f,0.83147f,-0.392847f,
0.5f,0.707107f,-0.5f,
0.587938f,0.55557f,-0.587938f,
0.653282f,0.382683f,-0.653281f,
0.69352f,0.19509f,-0.69352f,
0.707107f,0f,-0.707107f,
0.69352f,-0.19509f,-0.69352f,
0.653282f,-0.382683f,-0.653281f,
0.587938f,-0.55557f,-0.587938f,
0.5f,-0.707107f,-0.5f,
0.392848f,-0.83147f,-0.392847f,
0.270598f,-0.92388f,-0.270598f,
0.13795f,-0.980785f,-0.137949f,
0.162212f,0.980785f,-0.108386f,
0.31819f,0.92388f,-0.212607f,
0.46194f,0.83147f,-0.308658f,
0.587938f,0.707107f,-0.392847f,
0.691342f,0.55557f,-0.46194f,
0.768178f,0.382683f,-0.51328f,
0.815493f,0.19509f,-0.544895f,
0.83147f,0f,-0.55557f,
0.815493f,-0.19509f,-0.544895f,
0.768178f,-0.382683f,-0.51328f,
0.691342f,-0.55557f,-0.46194f,
0.587938f,-0.707107f,-0.392847f,
0.46194f,-0.83147f,-0.308658f,
0.31819f,-0.92388f,-0.212607f,
0.162212f,-0.980785f,-0.108386f,
0.18024f,0.980785f,-0.074658f,
0.353554f,0.92388f,-0.146446f,
0.51328f,0.83147f,-0.212607f,
0.653282f,0.707107f,-0.270598f,
0.768178f,0.55557f,-0.318189f,
0.853554f,0.382683f,-0.353553f,
0.906128f,0.19509f,-0.37533f,
0.92388f,0f,-0.382683f,
0.906128f,-0.19509f,-0.37533f,
0.853554f,-0.382683f,-0.353553f,
0.768178f,-0.55557f,-0.318189f,
0.653282f,-0.707107f,-0.270598f,
0.51328f,-0.83147f,-0.212607f,
0.353554f,-0.92388f,-0.146446f,
0.18024f,-0.980785f,-0.074658f,
0.191342f,0.980785f,-0.03806f,
0.375331f,0.92388f,-0.074658f,
0.544895f,0.83147f,-0.108386f,
0.69352f,0.707107f,-0.137949f,
0.815493f,0.55557f,-0.162211f,
0.906128f,0.382683f,-0.18024f,
0.96194f,0.19509f,-0.191341f,
0.980785f,0f,-0.19509f,
0.96194f,-0.19509f,-0.191341f,
0.906128f,-0.382683f,-0.18024f,
0.815493f,-0.55557f,-0.162211f,
0.69352f,-0.707107f,-0.137949f,
0.544895f,-0.83147f,-0.108386f,
0.37533f,-0.92388f,-0.074658f,
0.191342f,-0.980785f,-0.03806f,
0.195091f,0.980785f,0f,
0.382684f,0.92388f,0f,
0.55557f,0.83147f,0f,
0.707107f,0.707107f,0f,
0.83147f,0.55557f,0f,
0.92388f,0.382683f,0f,
0.980785f,0.19509f,0f,
1f,0f,0f,
0.980785f,-0.19509f,0f,
0.92388f,-0.382683f,0f,
0.83147f,-0.55557f,0f,
0.707107f,-0.707107f,0f,
0.55557f,-0.83147f,0f,
0.382684f,-0.92388f,0f,
0.19509f,-0.980785f,0f,
0.191342f,0.980785f,0.038061f,
0.375331f,0.92388f,0.074658f,
0.544895f,0.83147f,0.108387f,
0.69352f,0.707107f,0.13795f,
0.815493f,0.55557f,0.162212f,
0.906128f,0.382683f,0.18024f,
0.96194f,0.19509f,0.191342f,
0.980785f,0f,0.195091f,
0.96194f,-0.19509f,0.191342f,
0.906128f,-0.382683f,0.18024f,
0.815493f,-0.55557f,0.162212f,
0.69352f,-0.707107f,0.13795f,
0.544895f,-0.83147f,0.108387f,
0.37533f,-0.92388f,0.074658f,
0.191342f,-0.980785f,0.038061f,
0.18024f,0.980785f,0.074658f,
0.353554f,0.92388f,0.146447f,
0.51328f,0.83147f,0.212608f,
0.653282f,0.707107f,0.270598f,
0.768178f,0.55557f,0.31819f,
0.853554f,0.382683f,0.353554f,
0.906127f,0.19509f,0.375331f,
0.92388f,0f,0.382684f,
0.906127f,-0.19509f,0.375331f,
0.853554f,-0.382683f,0.353554f,
0.768178f,-0.55557f,0.31819f,
0.653282f,-0.707107f,0.270598f,
0.51328f,-0.83147f,0.212608f,
0.353553f,-0.92388f,0.146447f,
0.18024f,-0.980785f,0.074658f,
0.162212f,0.980785f,0.108387f,
0.31819f,0.92388f,0.212608f,
0.46194f,0.83147f,0.308659f,
0.587938f,0.707107f,0.392848f,
0.691342f,0.55557f,0.46194f,
0.768178f,0.382683f,0.51328f,
0.815493f,0.19509f,0.544895f,
0.83147f,0f,0.555571f,
0.815493f,-0.19509f,0.544895f,
0.768178f,-0.382683f,0.51328f,
0.691342f,-0.55557f,0.46194f,
0.587938f,-0.707107f,0.392848f,
0.46194f,-0.83147f,0.308659f,
0.31819f,-0.92388f,0.212608f,
0.162212f,-0.980785f,0.108387f,
0.13795f,0.980785f,0.13795f,
0.270598f,0.92388f,0.270599f,
0.392848f,0.83147f,0.392848f,
0.5f,0.707107f,0.5f,
0.587938f,0.55557f,0.587938f,
0.653282f,0.382683f,0.653282f,
0.69352f,0.19509f,0.69352f,
0.707107f,0f,0.707107f,
0.69352f,-0.19509f,0.69352f,
0.653282f,-0.382683f,0.653282f,
0.587938f,-0.55557f,0.587938f,
0.5f,-0.707107f,0.5f,
0.392848f,-0.83147f,0.392848f,
0.270598f,-0.92388f,0.270598f,
0.13795f,-0.980785f,0.13795f,
0.108386f,0.980785f,0.162212f,
0.212608f,0.92388f,0.31819f,
0.308658f,0.83147f,0.46194f,
0.392848f,0.707107f,0.587938f,
0.46194f,0.55557f,0.691342f,
0.51328f,0.382683f,0.768178f,
0.544895f,0.19509f,0.815493f,
0.55557f,0f,0.83147f,
0.544895f,-0.19509f,0.815493f,
0.51328f,-0.382683f,0.768178f,
0.46194f,-0.55557f,0.691342f,
0.392848f,-0.707107f,0.587938f,
0.308658f,-0.83147f,0.46194f,
0.212608f,-0.92388f,0.31819f,
0.108386f,-0.980785f,0.162212f,
0f,-1f,0f,
0.074658f,0.980785f,0.18024f,
0.146447f,0.92388f,0.353554f,
0.212608f,0.83147f,0.51328f,
0.270598f,0.707107f,0.653282f,
0.31819f,0.55557f,0.768178f,
0.353553f,0.382683f,0.853554f,
0.37533f,0.19509f,0.906128f,
0.382683f,0f,0.92388f,
0.37533f,-0.19509f,0.906128f,
0.353553f,-0.382683f,0.853554f,
0.31819f,-0.55557f,0.768178f,
0.270598f,-0.707107f,0.653282f,
0.212608f,-0.83147f,0.51328f,
0.146447f,-0.92388f,0.353554f,
0.074658f,-0.980785f,0.18024f,
0.03806f,0.980785f,0.191342f,
0.074658f,0.92388f,0.375331f,
0.108386f,0.83147f,0.544896f,
0.13795f,0.707107f,0.69352f,
0.162212f,0.55557f,0.815493f,
0.18024f,0.382683f,0.906128f,
0.191342f,0.19509f,0.96194f,
0.19509f,0f,0.980786f,
0.191342f,-0.19509f,0.96194f,
0.18024f,-0.382683f,0.906128f,
0.162212f,-0.55557f,0.815493f,
0.13795f,-0.707107f,0.69352f,
0.108386f,-0.83147f,0.544895f,
0.074658f,-0.92388f,0.375331f,
0.03806f,-0.980785f,0.191342f,
-0f,0.980785f,0.195091f,
0f,0.92388f,0.382684f,
0f,0.83147f,0.555571f,
-0f,0.707107f,0.707107f,
-0f,0.55557f,0.83147f,
0f,0.382683f,0.92388f,
-0f,0.19509f,0.980785f,
-0f,0f,1f,
-0f,-0.19509f,0.980785f,
0f,-0.382683f,0.92388f,
-0f,-0.55557f,0.83147f,
-0f,-0.707107f,0.707107f,
-0f,-0.83147f,0.55557f,
0f,-0.92388f,0.382684f,
0f,-0.980785f,0.195091f,
-0.03806f,0.980785f,0.191342f,
-0.074658f,0.92388f,0.375331f,
-0.108386f,0.83147f,0.544896f,
-0.13795f,0.707107f,0.69352f,
-0.162212f,0.55557f,0.815493f,
-0.18024f,0.382683f,0.906128f,
-0.191342f,0.19509f,0.96194f,
-0.19509f,0f,0.980786f,
-0.191342f,-0.19509f,0.96194f,
-0.18024f,-0.382683f,0.906128f,
-0.162212f,-0.55557f,0.815493f,
-0.13795f,-0.707107f,0.69352f,
-0.108386f,-0.83147f,0.544895f,
-0.074658f,-0.92388f,0.375331f,
-0.03806f,-0.980785f,0.191342f,
-0.074658f,0.980785f,0.18024f,
-0.146447f,0.92388f,0.353554f,
-0.212608f,0.83147f,0.51328f,
-0.270598f,0.707107f,0.653282f,
-0.31819f,0.55557f,0.768178f,
-0.353553f,0.382683f,0.853554f,
-0.37533f,0.19509f,0.906127f,
-0.382684f,0f,0.92388f,
-0.37533f,-0.19509f,0.906127f,
-0.353553f,-0.382683f,0.853554f,
-0.31819f,-0.55557f,0.768178f,
-0.270598f,-0.707107f,0.653282f,
-0.212608f,-0.83147f,0.51328f,
-0.146447f,-0.92388f,0.353554f,
-0.074658f,-0.980785f,0.18024f,
-0.108386f,0.980785f,0.162212f,
-0.212608f,0.92388f,0.31819f,
-0.308658f,0.83147f,0.46194f,
-0.392847f,0.707107f,0.587938f,
-0.46194f,0.55557f,0.691342f,
-0.51328f,0.382683f,0.768178f,
-0.544895f,0.19509f,0.815493f,
-0.55557f,0f,0.83147f,
-0.544895f,-0.19509f,0.815493f,
-0.51328f,-0.382683f,0.768178f,
-0.46194f,-0.55557f,0.691342f,
-0.392847f,-0.707107f,0.587938f,
-0.308658f,-0.83147f,0.46194f,
-0.212607f,-0.92388f,0.31819f,
-0.108386f,-0.980785f,0.162212f,
-0f,1f,1E-06f,
-0.13795f,0.980785f,0.13795f,
-0.270598f,0.92388f,0.270598f,
-0.392848f,0.83147f,0.392848f,
-0.5f,0.707107f,0.5f,
-0.587938f,0.55557f,0.587938f,
-0.653281f,0.382683f,0.653282f,
-0.69352f,0.19509f,0.69352f,
-0.707107f,0f,0.707107f,
-0.69352f,-0.19509f,0.69352f,
-0.653281f,-0.382683f,0.653282f,
-0.587938f,-0.55557f,0.587938f,
-0.5f,-0.707107f,0.5f,
-0.392847f,-0.83147f,0.392848f,
-0.270598f,-0.92388f,0.270598f,
-0.13795f,-0.980785f,0.13795f,
-0.162212f,0.980785f,0.108387f,
-0.31819f,0.92388f,0.212608f,
-0.46194f,0.83147f,0.308659f,
-0.587938f,0.707107f,0.392848f,
-0.691342f,0.55557f,0.46194f,
-0.768178f,0.382683f,0.51328f,
-0.815493f,0.19509f,0.544895f,
-0.83147f,0f,0.55557f,
-0.815493f,-0.19509f,0.544895f,
-0.768178f,-0.382683f,0.51328f,
-0.691342f,-0.55557f,0.46194f,
-0.587938f,-0.707107f,0.392848f,
-0.46194f,-0.83147f,0.308658f,
-0.31819f,-0.92388f,0.212608f,
-0.162212f,-0.980785f,0.108387f,
-0.18024f,0.980785f,0.074658f,
-0.353553f,0.92388f,0.146447f,
-0.51328f,0.83147f,0.212608f,
-0.653281f,0.707107f,0.270598f,
-0.768177f,0.55557f,0.31819f,
-0.853553f,0.382683f,0.353554f,
-0.906127f,0.19509f,0.37533f,
-0.92388f,0f,0.382684f,
-0.906127f,-0.19509f,0.37533f,
-0.853553f,-0.382683f,0.353554f,
-0.768177f,-0.55557f,0.31819f,
-0.653281f,-0.707107f,0.270598f,
-0.51328f,-0.83147f,0.212608f,
-0.353553f,-0.92388f,0.146447f,
-0.18024f,-0.980785f,0.074658f,
-0.191342f,0.980785f,0.038061f,
-0.37533f,0.92388f,0.074658f,
-0.544895f,0.83147f,0.108387f,
-0.69352f,0.707107f,0.13795f,
-0.815493f,0.55557f,0.162212f,
-0.906127f,0.382683f,0.18024f,
-0.961939f,0.19509f,0.191342f,
-0.980785f,0f,0.19509f,
-0.961939f,-0.19509f,0.191342f,
-0.906127f,-0.382683f,0.18024f,
-0.815493f,-0.55557f,0.162212f,
-0.69352f,-0.707107f,0.13795f,
-0.544895f,-0.83147f,0.108387f,
-0.37533f,-0.92388f,0.074658f,
-0.191342f,-0.980785f,0.038061f,
-0.19509f,0.980785f,0f,
-0.382683f,0.92388f,0f,
-0.55557f,0.83147f,0f,
-0.707107f,0.707107f,0f,
-0.831469f,0.55557f,0f,
-0.923879f,0.382683f,0f,
-0.980785f,0.19509f,0f,
-1f,0f,0f,
-0.980785f,-0.19509f,0f,
-0.923879f,-0.382683f,0f,
-0.831469f,-0.55557f,0f,
-0.707107f,-0.707107f,0f,
-0.55557f,-0.83147f,0f,
-0.382683f,-0.92388f,0f,
-0.19509f,-0.980785f,0f,
-0.191342f,0.980785f,-0.03806f,
-0.37533f,0.92388f,-0.074658f,
-0.544895f,0.83147f,-0.108386f,
-0.69352f,0.707107f,-0.137949f,
-0.815493f,0.55557f,-0.162211f,
-0.906127f,0.382683f,-0.18024f,
-0.961939f,0.19509f,-0.191342f,
-0.980785f,0f,-0.19509f,
-0.961939f,-0.19509f,-0.191342f,
-0.906127f,-0.382683f,-0.18024f,
-0.815493f,-0.55557f,-0.162211f,
-0.69352f,-0.707107f,-0.137949f,
-0.544895f,-0.83147f,-0.108386f,
-0.37533f,-0.92388f,-0.074658f,
-0.191342f,-0.980785f,-0.03806f,
-0.18024f,0.980785f,-0.074658f,
-0.353553f,0.92388f,-0.146446f,
-0.51328f,0.83147f,-0.212607f,
-0.653281f,0.707107f,-0.270598f,
-0.768177f,0.55557f,-0.318189f,
-0.853553f,0.382683f,-0.353553f,
-0.906127f,0.19509f,-0.37533f,
-0.923879f,0f,-0.382683f,
-0.906127f,-0.19509f,-0.37533f,
-0.853553f,-0.382683f,-0.353553f,
-0.768177f,-0.55557f,-0.318189f,
-0.653281f,-0.707107f,-0.270598f,
-0.51328f,-0.83147f,-0.212607f,
-0.353553f,-0.92388f,-0.146446f,
-0.18024f,-0.980785f,-0.074657f,
-0.162212f,0.980785f,-0.108386f,
-0.31819f,0.92388f,-0.212607f,
-0.46194f,0.83147f,-0.308658f,
-0.587938f,0.707107f,-0.392847f,
-0.691341f,0.55557f,-0.461939f,
-0.768178f,0.382683f,-0.51328f,
-0.815493f,0.19509f,-0.544895f,
-0.831469f,0f,-0.55557f,
-0.815493f,-0.19509f,-0.544895f,
-0.768178f,-0.382683f,-0.51328f,
-0.691341f,-0.55557f,-0.461939f,
-0.587938f,-0.707107f,-0.392847f,
-0.46194f,-0.83147f,-0.308658f,
-0.318189f,-0.92388f,-0.212607f,
-0.162212f,-0.980785f,-0.108386f,
-0.13795f,0.980785f,-0.137949f,
-0.270598f,0.92388f,-0.270598f,
-0.392847f,0.83147f,-0.392847f,
-0.5f,0.707107f,-0.5f,
-0.587937f,0.55557f,-0.587937f,
-0.653281f,0.382683f,-0.653281f,
-0.693519f,0.19509f,-0.693519f,
-0.707106f,0f,-0.707106f,
-0.693519f,-0.19509f,-0.693519f,
-0.653281f,-0.382683f,-0.653281f,
-0.587937f,-0.55557f,-0.587937f,
-0.5f,-0.707107f,-0.5f,
-0.392847f,-0.83147f,-0.392847f,
-0.270598f,-0.92388f,-0.270598f,
-0.13795f,-0.980785f,-0.137949f,
-0.108386f,0.980785f,-0.162211f,
-0.212607f,0.92388f,-0.318189f,
-0.308658f,0.83147f,-0.461939f,
-0.392847f,0.707107f,-0.587937f,
-0.461939f,0.55557f,-0.691341f,
-0.51328f,0.382683f,-0.768177f,
-0.544895f,0.19509f,-0.815492f,
-0.55557f,0f,-0.831469f,
-0.544895f,-0.19509f,-0.815492f,
-0.51328f,-0.382683f,-0.768177f,
-0.461939f,-0.55557f,-0.691341f,
-0.392847f,-0.707107f,-0.587937f,
-0.308658f,-0.83147f,-0.461939f,
-0.212607f,-0.92388f,-0.318189f,
-0.108386f,-0.980785f,-0.162211f,
-0.074658f,0.980785f,-0.18024f,
-0.146447f,0.92388f,-0.353553f,
-0.212607f,0.83147f,-0.51328f,
-0.270598f,0.707107f,-0.653281f,
-0.318189f,0.55557f,-0.768177f,
-0.353553f,0.382683f,-0.853553f,
-0.37533f,0.19509f,-0.906127f,
-0.382683f,0f,-0.923879f,
-0.37533f,-0.19509f,-0.906127f,
-0.353553f,-0.382683f,-0.853553f,
-0.318189f,-0.55557f,-0.768177f,
-0.270598f,-0.707107f,-0.653281f,
-0.212607f,-0.83147f,-0.513279f,
-0.146446f,-0.92388f,-0.353553f,
-0.074658f,-0.980785f,-0.18024f,
-0.03806f,0.980785f,-0.191342f,
-0.074658f,0.92388f,-0.37533f,
-0.108386f,0.83147f,-0.544895f,
-0.13795f,0.707107f,-0.69352f,
-0.162211f,0.55557f,-0.815492f,
-0.18024f,0.382683f,-0.906127f,
-0.191341f,0.19509f,-0.961939f,
-0.19509f,0f,-0.980785f,
-0.191341f,-0.19509f,-0.961939f,
-0.18024f,-0.382683f,-0.906127f,
-0.162211f,-0.55557f,-0.815492f,
-0.13795f,-0.707107f,-0.69352f,
-0.108386f,-0.83147f,-0.544895f,
-0.074658f,-0.92388f,-0.37533f,
-0.03806f,-0.980785f,-0.191341f,
0f,-0.382683f,-0.923879f,
0f,-0.55557f,-0.831469f,
0f,-0.707107f,-0.707106f,
0f,-0.92388f,-0.382683f,
0f,-0.980785f,-0.19509f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0.831469f,-0.55557f,0f,
-0.707107f,0.707107f,0f,
-0.707107f,-0.707107f,0f,
-0.831469f,0.55557f,0f,
-0.55557f,-0.83147f,0f,
-0.923879f,0.382683f,0f,
-0.382683f,-0.92388f,0f,
-0.980785f,0.19509f,0f,
-0.19509f,-0.980785f,0f,
-1f,0f,0f,
-0.19509f,0.980785f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0.980785f,-0.19509f,0f,
-0.382683f,0.92388f,0f,
-0.923879f,-0.382683f,0f,
-0.55557f,0.83147f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,
0f,-1f,0f,
-0f,1f,1E-06f,
-0f,1f,1E-06f,
0f,-1f,0f,
-0f,1f,1E-06f,
0f,-1f,0f,

                };
                return vertices;
            }
            else if (geometry == Geometries.Octahedron)
            {
                float[] vertices = {
                     0, 0.66f,0,
                      0.5f,0,-0.5f,
                     -0.5f,0,-0.5f,

                      0, 0.66f,0,
                      -0.5f,0,0.5f,
                      0.5f,0,0.5f,

                      0, 0.66f,0,
                     -0.5f,0,-0.5f,
                      -0.5f,0,0.5f,

                      0, 0.66f,0,
                      0.5f,0,0.5f,
                      0.5f,0,-0.5f,

                     -0.5f,0,-0.5f,
                      0.5f,0,-0.5f,
                     0, -0.66f,0,

                      0.5f,0,0.5f,
                      -0.5f,0,0.5f,
                      0, -0.66f,0,

                      -0.5f,0,0.5f,
                     -0.5f,0,-0.5f,
                      0, -0.66f,0,

                      0.5f,0,-0.5f,
                      0.5f,0,0.5f,
                      0, -0.66f,0,





                };
                return vertices;
            }
            else if (geometry == Geometries.HexagonalPrism)
            {
                float[] vertices = {
                    0.25f, 0.5f, -0.5f,
                    0.25f, -0.5f, -0.5f,
                    -0.25f, -0.5f, -0.5f,
                     -0.25f, 0.5f, -0.5f,

                      -0.25f, 0.5f, 0.5f,
                    -0.25f, -0.5f, 0.5f,
                    0.25f, -0.5f, 0.5f,
                     0.25f, 0.5f, 0.5f,

                      -0.25f, 0.5f, -0.5f,
                    -0.25f, -0.5f, -0.5f,
                    -0.5f, -0.5f, 0,
                      -0.5f, 0.5f, 0,

                        0.25f, 0.5f, 0.5f,
                    0.25f, -0.5f, 0.5f,
                    0.5f, -0.5f, 0,
                      0.5f, 0.5f, 0,

                      -0.5f, 0.5f, 0,
                    -0.5f, -0.5f, 0,
                        -0.25f, -0.5f, 0.5f,
                    -0.25f, 0.5f, 0.5f,

                      0.5f, 0.5f, 0,
                    0.5f, -0.5f, 0,
                    0.25f, -0.5f, -0.5f,
                            0.25f, 0.5f, -0.5f,

                     -0.25f, 0.5f, -0.5f,
                     -0.5f, 0.5f, 0,
                    -0.25f, 0.5f, 0.5f,
                      0.25f, 0.5f, 0.5f,
                    0.5f, 0.5f, 0,
                     0.25f, 0.5f, -0.5f,

                    -0.25f, -0.5f, 0.5f,
                     -0.5f, -0.5f, 0,
                     -0.25f, -0.5f, -0.5f,
                     0.25f, -0.5f, -0.5f,
                    0.5f, -0.5f, 0,
                      0.25f, -0.5f, 0.5f,
                };
                return vertices;
            }
            else
            {
                return null;
            }
        }
        public static float[] GetTextureCoordinates(Geometries geometry)
        {
            if (geometry == Geometries.Quad)
            {
                float[] textureCoords =
                {
                    0,0,
                    0,1,
                    1,1,
                    1,0,
                };
                return textureCoords;
            }
            else if (geometry == Geometries.Triangle)
            {
                float[] textureCoords =
                {
                    0.5f,0,
                    0,1,
                    1,1,
                };
                return textureCoords;
            }
            else if (geometry == Geometries.Cube)
            {
                float[] textureCoords = {

                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,
                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,
                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,
                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,
                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,
                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0
                };
                return textureCoords;
            }
            else if (geometry == Geometries.Tetrahedron)
            {
                float[] textureCoords =
                {
                     0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                };
                return textureCoords;
            }
            else if (geometry == Geometries.Pyramid)
            {
                float[] textureCoords =
                {
                     0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                        0,0,
                    0,1,
                    1,1,
                    1,0
                };
                return textureCoords;
            }
            else if (geometry == Geometries.Sphere)
            {
                float[] textureCoords =
                {
                   0.75f,0.0625f,
0.75f,0.125f,
0.75f,0.1875f,
0.75f,0.25f,
0.75f,0.3125f,
0.75f,0.375f,
0.75f,0.4375f,
0.75f,0.5f,
0.75f,0.5625f,
0.75f,0.8125f,
0.71875f,0.0625f,
0.71875f,0.125f,
0.71875f,0.1875f,
0.71875f,0.25f,
0.71875f,0.3125f,
0.71875f,0.375f,
0.71875f,0.4375f,
0.71875f,0.5f,
0.71875f,0.5625f,
0.71875f,0.625f,
0.71875f,0.6875f,
0.71875f,0.75f,
0.71875f,0.8125f,
0.71875f,0.875f,
0.71875f,0.9375f,
0.6875f,0.0625f,
0.6875f,0.125f,
0.6875f,0.1875f,
0.6875f,0.25f,
0.6875f,0.3125f,
0.6875f,0.375f,
0.6875f,0.4375f,
0.6875f,0.5f,
0.6875f,0.5625f,
0.6875f,0.625f,
0.6875f,0.6875f,
0.6875f,0.75f,
0.6875f,0.8125f,
0.6875f,0.875f,
0.6875f,0.9375f,
0.65625f,0.0625f,
0.65625f,0.125f,
0.65625f,0.1875f,
0.65625f,0.25f,
0.65625f,0.3125f,
0.65625f,0.375f,
0.65625f,0.4375f,
0.65625f,0.5f,
0.65625f,0.5625f,
0.65625f,0.625f,
0.65625f,0.6875f,
0.65625f,0.75f,
0.65625f,0.8125f,
0.65625f,0.875f,
0.65625f,0.9375f,
0.625f,0.0625f,
0.625f,0.125f,
0.625f,0.1875f,
0.625f,0.25f,
0.625f,0.3125f,
0.625f,0.375f,
0.625f,0.4375f,
0.625f,0.5f,
0.625f,0.5625f,
0.625f,0.625f,
0.625f,0.6875f,
0.625f,0.75f,
0.625f,0.8125f,
0.625f,0.875f,
0.625f,0.9375f,
0.59375f,0.0625f,
0.59375f,0.125f,
0.59375f,0.1875f,
0.59375f,0.25f,
0.59375f,0.3125f,
0.59375f,0.375f,
0.59375f,0.4375f,
0.59375f,0.5f,
0.59375f,0.5625f,
0.59375f,0.625f,
0.59375f,0.6875f,
0.59375f,0.75f,
0.59375f,0.8125f,
0.59375f,0.875f,
0.59375f,0.9375f,
0.5625f,0.0625f,
0.5625f,0.125f,
0.5625f,0.1875f,
0.5625f,0.25f,
0.5625f,0.3125f,
0.5625f,0.375f,
0.5625f,0.4375f,
0.5625f,0.5f,
0.5625f,0.5625f,
0.5625f,0.625f,
0.5625f,0.6875f,
0.5625f,0.75f,
0.5625f,0.8125f,
0.5625f,0.875f,
0.5625f,0.9375f,
0.53125f,0.0625f,
0.53125f,0.125f,
0.53125f,0.1875f,
0.53125f,0.25f,
0.53125f,0.3125f,
0.53125f,0.375f,
0.53125f,0.4375f,
0.53125f,0.5f,
0.53125f,0.5625f,
0.53125f,0.625f,
0.53125f,0.6875f,
0.53125f,0.75f,
0.53125f,0.8125f,
0.53125f,0.875f,
0.53125f,0.9375f,
0.5f,0.0625f,
0.5f,0.125f,
0.5f,0.1875f,
0.5f,0.25f,
0.5f,0.3125f,
0.5f,0.375f,
0.5f,0.4375f,
0.5f,0.5f,
0.5f,0.5625f,
0.5f,0.625f,
0.5f,0.6875f,
0.5f,0.75f,
0.5f,0.8125f,
0.5f,0.875f,
0.5f,0.9375f,
0.46875f,0.0625f,
0.46875f,0.125f,
0.46875f,0.1875f,
0.46875f,0.25f,
0.46875f,0.3125f,
0.46875f,0.375f,
0.46875f,0.4375f,
0.46875f,0.5f,
0.46875f,0.5625f,
0.46875f,0.625f,
0.46875f,0.6875f,
0.46875f,0.75f,
0.46875f,0.8125f,
0.46875f,0.875f,
0.46875f,0.9375f,
0.4375f,0.0625f,
0.4375f,0.125f,
0.4375f,0.1875f,
0.4375f,0.25f,
0.4375f,0.3125f,
0.4375f,0.375f,
0.4375f,0.4375f,
0.4375f,0.5f,
0.4375f,0.5625f,
0.4375f,0.625f,
0.4375f,0.6875f,
0.4375f,0.75f,
0.4375f,0.8125f,
0.4375f,0.875f,
0.4375f,0.9375f,
0.40625f,0.0625f,
0.40625f,0.125f,
0.40625f,0.1875f,
0.40625f,0.25f,
0.40625f,0.3125f,
0.40625f,0.375f,
0.40625f,0.4375f,
0.40625f,0.5f,
0.40625f,0.5625f,
0.40625f,0.625f,
0.40625f,0.6875f,
0.40625f,0.75f,
0.40625f,0.8125f,
0.40625f,0.875f,
0.40625f,0.9375f,
0.375f,0.0625f,
0.375f,0.125f,
0.375f,0.1875f,
0.375f,0.25f,
0.375f,0.3125f,
0.375f,0.375f,
0.375f,0.4375f,
0.375f,0.5f,
0.375f,0.5625f,
0.375f,0.625f,
0.375f,0.6875f,
0.375f,0.75f,
0.375f,0.8125f,
0.375f,0.875f,
0.375f,0.9375f,
0.34375f,0.0625f,
0.34375f,0.125f,
0.34375f,0.1875f,
0.34375f,0.25f,
0.34375f,0.3125f,
0.34375f,0.375f,
0.34375f,0.4375f,
0.34375f,0.5f,
0.34375f,0.5625f,
0.34375f,0.625f,
0.34375f,0.6875f,
0.34375f,0.75f,
0.34375f,0.8125f,
0.34375f,0.875f,
0.34375f,0.9375f,
0.734375f,1f,
0.3125f,0.0625f,
0.3125f,0.125f,
0.3125f,0.1875f,
0.3125f,0.25f,
0.3125f,0.3125f,
0.3125f,0.375f,
0.3125f,0.4375f,
0.3125f,0.5f,
0.3125f,0.5625f,
0.3125f,0.625f,
0.3125f,0.6875f,
0.3125f,0.75f,
0.3125f,0.8125f,
0.3125f,0.875f,
0.3125f,0.9375f,
0.28125f,0.0625f,
0.28125f,0.125f,
0.28125f,0.1875f,
0.28125f,0.25f,
0.28125f,0.3125f,
0.28125f,0.375f,
0.28125f,0.4375f,
0.28125f,0.5f,
0.28125f,0.5625f,
0.28125f,0.625f,
0.28125f,0.6875f,
0.28125f,0.75f,
0.28125f,0.8125f,
0.28125f,0.875f,
0.28125f,0.9375f,
0.25f,0.0625f,
0.25f,0.125f,
0.25f,0.1875f,
0.25f,0.25f,
0.25f,0.3125f,
0.25f,0.375f,
0.25f,0.4375f,
0.25f,0.5f,
0.25f,0.5625f,
0.25f,0.625f,
0.25f,0.6875f,
0.25f,0.75f,
0.25f,0.8125f,
0.25f,0.875f,
0.25f,0.9375f,
0.21875f,0.0625f,
0.21875f,0.125f,
0.21875f,0.1875f,
0.21875f,0.25f,
0.21875f,0.3125f,
0.21875f,0.375f,
0.21875f,0.4375f,
0.21875f,0.5f,
0.21875f,0.5625f,
0.21875f,0.625f,
0.21875f,0.6875f,
0.21875f,0.75f,
0.21875f,0.8125f,
0.21875f,0.875f,
0.21875f,0.9375f,
0.1875f,0.0625f,
0.1875f,0.125f,
0.1875f,0.1875f,
0.1875f,0.25f,
0.1875f,0.3125f,
0.1875f,0.375f,
0.1875f,0.4375f,
0.1875f,0.5f,
0.1875f,0.5625f,
0.1875f,0.625f,
0.1875f,0.6875f,
0.1875f,0.75f,
0.1875f,0.8125f,
0.1875f,0.875f,
0.1875f,0.9375f,
0.15625f,0.0625f,
0.15625f,0.125f,
0.15625f,0.1875f,
0.15625f,0.25f,
0.15625f,0.3125f,
0.15625f,0.375f,
0.15625f,0.4375f,
0.15625f,0.5f,
0.15625f,0.5625f,
0.15625f,0.625f,
0.15625f,0.6875f,
0.15625f,0.75f,
0.15625f,0.8125f,
0.15625f,0.875f,
0.15625f,0.9375f,
0.734375f,0f,
0.125f,0.0625f,
0.125f,0.125f,
0.125f,0.1875f,
0.125f,0.25f,
0.125f,0.3125f,
0.125f,0.375f,
0.125f,0.4375f,
0.125f,0.5f,
0.125f,0.5625f,
0.125f,0.625f,
0.125f,0.6875f,
0.125f,0.75f,
0.125f,0.8125f,
0.125f,0.875f,
0.125f,0.9375f,
0.09375f,0.0625f,
0.09375f,0.125f,
0.09375f,0.1875f,
0.09375f,0.25f,
0.09375f,0.3125f,
0.09375f,0.375f,
0.09375f,0.4375f,
0.09375f,0.5f,
0.09375f,0.5625f,
0.09375f,0.625f,
0.09375f,0.6875f,
0.09375f,0.75f,
0.09375f,0.8125f,
0.09375f,0.875f,
0.09375f,0.9375f,
0.0625f,0.0625f,
0.0625f,0.125f,
0.0625f,0.1875f,
0.0625f,0.25f,
0.0625f,0.3125f,
0.0625f,0.375f,
0.0625f,0.4375f,
0.0625f,0.5f,
0.0625f,0.5625f,
0.0625f,0.625f,
0.0625f,0.6875f,
0.0625f,0.75f,
0.0625f,0.8125f,
0.0625f,0.875f,
0.0625f,0.9375f,
0.03125f,0.0625f,
0.03125f,0.125f,
0.03125f,0.1875f,
0.03125f,0.25f,
0.03125f,0.3125f,
0.03125f,0.375f,
0.03125f,0.4375f,
0.03125f,0.5f,
0.03125f,0.5625f,
0.03125f,0.625f,
0.03125f,0.6875f,
0.03125f,0.75f,
0.03125f,0.8125f,
0.03125f,0.875f,
0.03125f,0.9375f,
0f,0.0625f,
0f,0.125f,
0f,0.1875f,
0f,0.25f,
0f,0.3125f,
0f,0.375f,
0f,0.4375f,
0f,0.5f,
0f,0.5625f,
0f,0.625f,
0f,0.6875f,
0f,0.75f,
0f,0.8125f,
0f,0.875f,
0f,0.9375f,
0.96875f,0.0625f,
0.96875f,0.125f,
0.96875f,0.1875f,
0.96875f,0.25f,
0.96875f,0.3125f,
0.96875f,0.375f,
0.96875f,0.4375f,
0.96875f,0.5f,
0.96875f,0.5625f,
0.96875f,0.625f,
0.96875f,0.6875f,
0.96875f,0.75f,
0.96875f,0.8125f,
0.96875f,0.875f,
0.96875f,0.9375f,
0.9375f,0.0625f,
0.9375f,0.125f,
0.9375f,0.1875f,
0.9375f,0.25f,
0.9375f,0.3125f,
0.9375f,0.375f,
0.9375f,0.4375f,
0.9375f,0.5f,
0.9375f,0.5625f,
0.9375f,0.625f,
0.9375f,0.6875f,
0.9375f,0.75f,
0.9375f,0.8125f,
0.9375f,0.875f,
0.9375f,0.9375f,
0.90625f,0.0625f,
0.90625f,0.125f,
0.90625f,0.1875f,
0.90625f,0.25f,
0.90625f,0.3125f,
0.90625f,0.375f,
0.90625f,0.4375f,
0.90625f,0.5f,
0.90625f,0.5625f,
0.90625f,0.625f,
0.90625f,0.6875f,
0.90625f,0.75f,
0.90625f,0.8125f,
0.90625f,0.875f,
0.90625f,0.9375f,
0.875f,0.0625f,
0.875f,0.125f,
0.875f,0.1875f,
0.875f,0.25f,
0.875f,0.3125f,
0.875f,0.375f,
0.875f,0.4375f,
0.875f,0.5f,
0.875f,0.5625f,
0.875f,0.625f,
0.875f,0.6875f,
0.875f,0.75f,
0.875f,0.8125f,
0.875f,0.875f,
0.875f,0.9375f,
0.84375f,0.0625f,
0.84375f,0.125f,
0.84375f,0.1875f,
0.84375f,0.25f,
0.84375f,0.3125f,
0.84375f,0.375f,
0.84375f,0.4375f,
0.84375f,0.5f,
0.84375f,0.5625f,
0.84375f,0.625f,
0.84375f,0.6875f,
0.84375f,0.75f,
0.84375f,0.8125f,
0.84375f,0.875f,
0.84375f,0.9375f,
0.8125f,0.0625f,
0.8125f,0.125f,
0.8125f,0.1875f,
0.8125f,0.25f,
0.8125f,0.3125f,
0.8125f,0.375f,
0.8125f,0.4375f,
0.8125f,0.5f,
0.8125f,0.5625f,
0.8125f,0.625f,
0.8125f,0.6875f,
0.8125f,0.75f,
0.8125f,0.8125f,
0.8125f,0.875f,
0.8125f,0.9375f,
0.78125f,0.0625f,
0.78125f,0.125f,
0.78125f,0.1875f,
0.78125f,0.25f,
0.78125f,0.3125f,
0.78125f,0.375f,
0.78125f,0.4375f,
0.78125f,0.5f,
0.78125f,0.5625f,
0.78125f,0.625f,
0.78125f,0.6875f,
0.78125f,0.75f,
0.78125f,0.8125f,
0.78125f,0.875f,
0.78125f,0.9375f,
0.75f,0.625f,
0.75f,0.6875f,
0.75f,0.75f,
0.75f,0.875f,
0.75f,0.9375f,
0.703125f,0f,
0.703125f,1f,
0.671875f,0f,
0.671875f,1f,
0.640625f,0f,
0.640625f,1f,
0.609375f,0f,
0.609375f,1f,
0.578125f,0f,
0.578125f,1f,
0.546875f,0f,
0.546875f,1f,
0.515625f,0f,
0.515625f,1f,
0.484374f,0f,
0.484375f,1f,
0.453124f,0f,
0.453125f,1f,
0.421874f,0f,
0.421875f,1f,
0.390625f,0f,
0.390625f,1f,
0.359375f,0f,
0.359375f,1f,
0.328125f,0f,
0.328125f,1f,
0.296875f,0f,
0.296875f,1f,
0.265625f,0f,
0.265625f,1f,
0.234375f,0f,
0.234375f,1f,
0.203125f,0f,
0.203125f,1f,
0.171875f,0f,
0.171875f,1f,
0.140625f,0f,
0.140625f,1f,
0.109375f,0f,
0.109375f,1f,
0.078125f,0f,
0.078125f,1f,
0.046875f,0f,
0.046875f,1f,
0.015625f,0f,
0.015625f,1f,
1f,0.6875f,
1f,0.25f,
1f,0.75f,
1f,0.3125f,
1f,0.8125f,
1f,0.375f,
1f,0.875f,
1f,0.4375f,
1f,0.9375f,
1f,0.5f,
1f,0.0625f,
0.984375f,0f,
0.984375f,1f,
1f,0.5625f,
1f,0.125f,
1f,0.625f,
1f,0.1875f,
0.953125f,0f,
0.953125f,1f,
0.921875f,0f,
0.921875f,1f,
0.890625f,0f,
0.890625f,1f,
0.859375f,0f,
0.859375f,1f,
0.828125f,1f,
0.828125f,0f,
0.796875f,0f,
0.796875f,1f,
0.765625f,0f,
0.765625f,1f,
                };
                return textureCoords;
            }
            else if (geometry == Geometries.Octahedron)
            {
                float[] textureCoords =
                {
                     0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,
                      0.5f,0,
                    0,1,
                    1,1,

                    1,1,
                    0,1,
                      0.5f,0,
                       1,1,
                    0,1,
                      0.5f,0,
                       1,1,
                    0,1,
                      0.5f,0,
                       1,1,
                    0,1,
                      0.5f,0,

                };
                return textureCoords;
            }
            else if (geometry == Geometries.HexagonalPrism)
            {
                float[] textureCoords =
                {
                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,

                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,

                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,

                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,

                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,

                    0, 0,
                    0, 1,
                    1, 1,
                    1, 0,

                    0.25f, 0,
                    0, 0.5f,
                    0.25f, 1,
                    0.75f, 1,
                    1, 0.5f,
                    0.75f,0,

                      0.25f, 0,
                    0, 0.5f,
                    0.25f, 1,
                    0.75f, 1,
                    1, 0.5f,
                    0.75f,0,
                };
                return textureCoords;
            }
            else
            {
                return null;
            }
        }
        public static float[] GetNormals(Geometries geometry)
        {
            if (geometry == Geometries.Quad)
            {
                float[] normals =
                {
                       0,1,0.5f,
                       0,0,0.5f,
                       1,0,0.5f,
                       1,1,0.5f,
                };
                return normals;
            }
            else if (geometry == Geometries.Triangle)
            {
                float[] normals =
                {
                    0.5f,1,0.5f,
                    0,0,0.5f,
                    1,0,0.5f
                };
                return normals;
            }
            else if (geometry == Geometries.Cube)
            {
                float[] normals =
                {
                0,0,-1,
                0,0,-1,
                0,0,-1,
                0,0,-1,

                0,0,1,
                0,0,1,
                0,0,1,
                0,0,1,

                1,0,0,
                1,0,0,
                1,0,0,
                1,0,0,

                -1,0,0,
                -1,0,0,
                -1,0,0,
                -1,0,0,

                0,1,0,
                0,1,0,
                0,1,0,
                0,1,0,

                0,-1,0,
                0,-1,0,
                0,-1,0,
                0,-1,0
                };
                return normals;
            }
            else if (geometry == Geometries.Tetrahedron)
            {
                float[] normals =
                {
                  0,1,-1,
                  0,1,-1,
                  0,1,-1,

                  -1,1,1,
                  -1,1,1,
                  -1,1,1,

                   1,1,1,
                   1,1,1,
                   1,1,1,

                   0,-1,0,
                   0,-1,0,
                   0,-1,0,

                };
                return normals;
            }
            else if (geometry == Geometries.Pyramid)
            {
                float[] normals =
                {
                  0,1,-1,
                  0,1,-1,
                  0,1,-1,

                   0,1,1,
                  0,1,1,
                  0,1,1,

                  -1,1,0,
                  -1,1,0,
                  -1,1,0,

                   1,1,0,
                   1,1,0,
                   1,1,0,

                  0,-1,0,
                0,-1,0,
                0,-1,0,
                0,-1,0

                };
                return normals;
            }
            else if (geometry == Geometries.Sphere)
            {
                float[] normals =
                {
                0f,0.9796f,-0.201f,
0f,0.9217f,-0.3879f,
0f,0.8286f,-0.5598f,
0f,0.704f,-0.7101f,
0f,0.5528f,-0.8333f,
0f,0.3805f,-0.9247f,
0f,0.1939f,-0.981f,
0f,0f,-1f,
0f,-0.1939f,-0.981f,
0f,-0.8286f,-0.5598f,
0.0392f,0.9796f,-0.1971f,
0.0757f,0.9217f,-0.3804f,
0.1092f,0.8286f,-0.549f,
0.1385f,0.704f,-0.6965f,
0.1626f,0.5528f,-0.8173f,
0.1804f,0.3805f,-0.907f,
0.1914f,0.1939f,-0.9622f,
0.1951f,0f,-0.9808f,
0.1914f,-0.1939f,-0.9622f,
0.1804f,-0.3805f,-0.907f,
0.1626f,-0.5528f,-0.8173f,
0.1385f,-0.704f,-0.6965f,
0.1092f,-0.8286f,-0.549f,
0.0757f,-0.9217f,-0.3804f,
0.0392f,-0.9796f,-0.1971f,
0.0769f,0.9796f,-0.1856f,
0.1484f,0.9217f,-0.3583f,
0.2142f,0.8286f,-0.5171f,
0.2717f,0.704f,-0.6561f,
0.3189f,0.5528f,-0.7699f,
0.3539f,0.3805f,-0.8544f,
0.3754f,0.1939f,-0.9063f,
0.3827f,0f,-0.9239f,
0.3754f,-0.1939f,-0.9063f,
0.3539f,-0.3805f,-0.8544f,
0.3189f,-0.5528f,-0.7699f,
0.2717f,-0.704f,-0.6561f,
0.2142f,-0.8286f,-0.5171f,
0.1484f,-0.9217f,-0.3583f,
0.0769f,-0.9796f,-0.1856f,
0.1116f,0.9796f,-0.1671f,
0.2155f,0.9217f,-0.3225f,
0.311f,0.8286f,-0.4654f,
0.3945f,0.704f,-0.5904f,
0.463f,0.5528f,-0.6929f,
0.5137f,0.3805f,-0.7689f,
0.545f,0.1939f,-0.8157f,
0.5556f,0f,-0.8314f,
0.545f,-0.1939f,-0.8157f,
0.5137f,-0.3805f,-0.7689f,
0.463f,-0.5528f,-0.6929f,
0.3945f,-0.704f,-0.5904f,
0.311f,-0.8286f,-0.4654f,
0.2155f,-0.9217f,-0.3225f,
0.1116f,-0.9796f,-0.1671f,
0.1421f,0.9796f,-0.1421f,
0.2743f,0.9217f,-0.2743f,
0.3958f,0.8286f,-0.3958f,
0.5021f,0.704f,-0.5021f,
0.5893f,0.5528f,-0.5893f,
0.6539f,0.3805f,-0.6539f,
0.6937f,0.1939f,-0.6937f,
0.7071f,0f,-0.7071f,
0.6937f,-0.1939f,-0.6937f,
0.6539f,-0.3805f,-0.6539f,
0.5893f,-0.5528f,-0.5893f,
0.5021f,-0.704f,-0.5021f,
0.3958f,-0.8286f,-0.3958f,
0.2743f,-0.9217f,-0.2743f,
0.1421f,-0.9796f,-0.1421f,
0.1671f,0.9796f,-0.1116f,
0.3225f,0.9217f,-0.2155f,
0.4654f,0.8286f,-0.311f,
0.5904f,0.704f,-0.3945f,
0.6929f,0.5528f,-0.463f,
0.7689f,0.3805f,-0.5137f,
0.8157f,0.1939f,-0.545f,
0.8314f,0f,-0.5556f,
0.8157f,-0.1939f,-0.545f,
0.7689f,-0.3805f,-0.5137f,
0.6929f,-0.5528f,-0.463f,
0.5904f,-0.704f,-0.3945f,
0.4654f,-0.8286f,-0.311f,
0.3225f,-0.9217f,-0.2155f,
0.1671f,-0.9796f,-0.1116f,
0.1856f,0.9796f,-0.0769f,
0.3583f,0.9217f,-0.1484f,
0.5171f,0.8286f,-0.2142f,
0.6561f,0.704f,-0.2717f,
0.7699f,0.5528f,-0.3189f,
0.8544f,0.3805f,-0.3539f,
0.9063f,0.1939f,-0.3754f,
0.9239f,0f,-0.3827f,
0.9063f,-0.1939f,-0.3754f,
0.8544f,-0.3805f,-0.3539f,
0.7699f,-0.5528f,-0.3189f,
0.6561f,-0.704f,-0.2717f,
0.5171f,-0.8286f,-0.2142f,
0.3583f,-0.9217f,-0.1484f,
0.1856f,-0.9796f,-0.0769f,
0.1971f,0.9796f,-0.0392f,
0.3804f,0.9217f,-0.0757f,
0.549f,0.8286f,-0.1092f,
0.6965f,0.704f,-0.1385f,
0.8173f,0.5528f,-0.1626f,
0.907f,0.3805f,-0.1804f,
0.9622f,0.1939f,-0.1914f,
0.9808f,0f,-0.1951f,
0.9622f,-0.1939f,-0.1914f,
0.907f,-0.3805f,-0.1804f,
0.8173f,-0.5528f,-0.1626f,
0.6965f,-0.704f,-0.1385f,
0.549f,-0.8286f,-0.1092f,
0.3804f,-0.9217f,-0.0757f,
0.1971f,-0.9796f,-0.0392f,
0.201f,0.9796f,0f,
0.3879f,0.9217f,0f,
0.5598f,0.8286f,0f,
0.7101f,0.704f,0f,
0.8333f,0.5528f,0f,
0.9247f,0.3805f,0f,
0.981f,0.1939f,0f,
1f,0f,0f,
0.981f,-0.1939f,0f,
0.9247f,-0.3805f,0f,
0.8333f,-0.5528f,0f,
0.7101f,-0.704f,0f,
0.5598f,-0.8286f,0f,
0.3879f,-0.9217f,0f,
0.201f,-0.9796f,0f,
0.1971f,0.9796f,0.0392f,
0.3804f,0.9217f,0.0757f,
0.549f,0.8286f,0.1092f,
0.6965f,0.704f,0.1385f,
0.8173f,0.5528f,0.1626f,
0.907f,0.3805f,0.1804f,
0.9622f,0.1939f,0.1914f,
0.9808f,0f,0.1951f,
0.9622f,-0.1939f,0.1914f,
0.907f,-0.3805f,0.1804f,
0.8173f,-0.5528f,0.1626f,
0.6965f,-0.704f,0.1385f,
0.549f,-0.8286f,0.1092f,
0.3804f,-0.9217f,0.0757f,
0.1971f,-0.9796f,0.0392f,
0.1856f,0.9796f,0.0769f,
0.3583f,0.9217f,0.1484f,
0.5171f,0.8286f,0.2142f,
0.6561f,0.704f,0.2717f,
0.7699f,0.5528f,0.3189f,
0.8544f,0.3805f,0.3539f,
0.9063f,0.1939f,0.3754f,
0.9239f,0f,0.3827f,
0.9063f,-0.1939f,0.3754f,
0.8544f,-0.3805f,0.3539f,
0.7699f,-0.5528f,0.3189f,
0.6561f,-0.704f,0.2717f,
0.5171f,-0.8286f,0.2142f,
0.3583f,-0.9217f,0.1484f,
0.1856f,-0.9796f,0.0769f,
0.1671f,0.9796f,0.1116f,
0.3225f,0.9217f,0.2155f,
0.4654f,0.8286f,0.311f,
0.5904f,0.704f,0.3945f,
0.6929f,0.5528f,0.463f,
0.7689f,0.3805f,0.5137f,
0.8157f,0.1939f,0.545f,
0.8314f,0f,0.5556f,
0.8157f,-0.1939f,0.545f,
0.7689f,-0.3805f,0.5137f,
0.6929f,-0.5528f,0.463f,
0.5904f,-0.704f,0.3945f,
0.4654f,-0.8286f,0.311f,
0.3225f,-0.9217f,0.2155f,
0.1671f,-0.9796f,0.1116f,
0.1421f,0.9796f,0.1421f,
0.2743f,0.9217f,0.2743f,
0.3958f,0.8286f,0.3958f,
0.5021f,0.704f,0.5021f,
0.5893f,0.5528f,0.5893f,
0.6539f,0.3805f,0.6539f,
0.6937f,0.1939f,0.6937f,
0.7071f,0f,0.7071f,
0.6937f,-0.1939f,0.6937f,
0.6539f,-0.3805f,0.6539f,
0.5893f,-0.5528f,0.5893f,
0.5021f,-0.704f,0.5021f,
0.3958f,-0.8286f,0.3958f,
0.2743f,-0.9217f,0.2743f,
0.1421f,-0.9796f,0.1421f,
0.1116f,0.9796f,0.1671f,
0.2155f,0.9217f,0.3225f,
0.311f,0.8286f,0.4654f,
0.3945f,0.704f,0.5904f,
0.463f,0.5528f,0.6929f,
0.5137f,0.3805f,0.7689f,
0.545f,0.1939f,0.8157f,
0.5556f,0f,0.8314f,
0.545f,-0.1939f,0.8157f,
0.5137f,-0.3805f,0.7689f,
0.463f,-0.5528f,0.6929f,
0.3945f,-0.704f,0.5904f,
0.311f,-0.8286f,0.4654f,
0.2155f,-0.9217f,0.3225f,
0.1116f,-0.9796f,0.1671f,
0f,-1f,0f,
0.0769f,0.9796f,0.1856f,
0.1484f,0.9217f,0.3583f,
0.2142f,0.8286f,0.5171f,
0.2717f,0.704f,0.6561f,
0.3189f,0.5528f,0.7699f,
0.3539f,0.3805f,0.8544f,
0.3754f,0.1939f,0.9063f,
0.3827f,0f,0.9239f,
0.3754f,-0.1939f,0.9063f,
0.3539f,-0.3805f,0.8544f,
0.3189f,-0.5528f,0.7699f,
0.2717f,-0.704f,0.6561f,
0.2142f,-0.8286f,0.5171f,
0.1484f,-0.9217f,0.3583f,
0.0769f,-0.9796f,0.1856f,
0.0392f,0.9796f,0.1971f,
0.0757f,0.9217f,0.3804f,
0.1092f,0.8286f,0.549f,
0.1385f,0.704f,0.6965f,
0.1626f,0.5528f,0.8173f,
0.1804f,0.3805f,0.907f,
0.1914f,0.1939f,0.9622f,
0.1951f,0f,0.9808f,
0.1914f,-0.1939f,0.9622f,
0.1804f,-0.3805f,0.907f,
0.1626f,-0.5528f,0.8173f,
0.1385f,-0.704f,0.6965f,
0.1092f,-0.8286f,0.549f,
0.0757f,-0.9217f,0.3804f,
0.0392f,-0.9796f,0.1971f,
0f,0.9796f,0.201f,
0f,0.9217f,0.3879f,
0f,0.8286f,0.5598f,
0f,0.704f,0.7101f,
0f,0.5528f,0.8333f,
0f,0.3805f,0.9247f,
0f,0.1939f,0.981f,
0f,0f,1f,
0f,-0.1939f,0.981f,
0f,-0.3805f,0.9247f,
0f,-0.5528f,0.8333f,
0f,-0.704f,0.7101f,
0f,-0.8286f,0.5598f,
0f,-0.9217f,0.3879f,
0f,-0.9796f,0.201f,
-0.0392f,0.9796f,0.1971f,
-0.0757f,0.9217f,0.3804f,
-0.1092f,0.8286f,0.549f,
-0.1385f,0.704f,0.6965f,
-0.1626f,0.5528f,0.8173f,
-0.1804f,0.3805f,0.907f,
-0.1914f,0.1939f,0.9622f,
-0.1951f,0f,0.9808f,
-0.1914f,-0.1939f,0.9622f,
-0.1804f,-0.3805f,0.907f,
-0.1626f,-0.5528f,0.8173f,
-0.1385f,-0.704f,0.6965f,
-0.1092f,-0.8286f,0.549f,
-0.0757f,-0.9217f,0.3804f,
-0.0392f,-0.9796f,0.1971f,
-0.0769f,0.9796f,0.1856f,
-0.1484f,0.9217f,0.3583f,
-0.2142f,0.8286f,0.5171f,
-0.2717f,0.704f,0.6561f,
-0.3189f,0.5528f,0.7699f,
-0.3539f,0.3805f,0.8544f,
-0.3754f,0.1939f,0.9063f,
-0.3827f,0f,0.9239f,
-0.3754f,-0.1939f,0.9063f,
-0.3539f,-0.3805f,0.8544f,
-0.3189f,-0.5528f,0.7699f,
-0.2717f,-0.704f,0.6561f,
-0.2142f,-0.8286f,0.5171f,
-0.1484f,-0.9217f,0.3583f,
-0.0769f,-0.9796f,0.1856f,
-0.1116f,0.9796f,0.1671f,
-0.2155f,0.9217f,0.3225f,
-0.311f,0.8286f,0.4654f,
-0.3945f,0.704f,0.5904f,
-0.463f,0.5528f,0.6929f,
-0.5137f,0.3805f,0.7689f,
-0.545f,0.1939f,0.8157f,
-0.5556f,0f,0.8314f,
-0.545f,-0.1939f,0.8157f,
-0.5137f,-0.3805f,0.7689f,
-0.463f,-0.5528f,0.6929f,
-0.3945f,-0.704f,0.5904f,
-0.311f,-0.8286f,0.4654f,
-0.2155f,-0.9217f,0.3225f,
-0.1116f,-0.9796f,0.1671f,
0f,1f,0f,
-0.1421f,0.9796f,0.1421f,
-0.2743f,0.9217f,0.2743f,
-0.3958f,0.8286f,0.3958f,
-0.5021f,0.704f,0.5021f,
-0.5893f,0.5528f,0.5893f,
-0.6539f,0.3805f,0.6539f,
-0.6937f,0.1939f,0.6937f,
-0.7071f,0f,0.7071f,
-0.6937f,-0.1939f,0.6937f,
-0.6539f,-0.3805f,0.6539f,
-0.5893f,-0.5528f,0.5893f,
-0.5021f,-0.704f,0.5021f,
-0.3958f,-0.8286f,0.3958f,
-0.2743f,-0.9217f,0.2743f,
-0.1421f,-0.9796f,0.1421f,
-0.1671f,0.9796f,0.1116f,
-0.3225f,0.9217f,0.2155f,
-0.4654f,0.8286f,0.311f,
-0.5904f,0.704f,0.3945f,
-0.6929f,0.5528f,0.463f,
-0.7689f,0.3805f,0.5137f,
-0.8157f,0.1939f,0.545f,
-0.8314f,0f,0.5556f,
-0.8157f,-0.1939f,0.545f,
-0.7689f,-0.3805f,0.5137f,
-0.6929f,-0.5528f,0.463f,
-0.5904f,-0.704f,0.3945f,
-0.4654f,-0.8286f,0.311f,
-0.3225f,-0.9217f,0.2155f,
-0.1671f,-0.9796f,0.1116f,
-0.1856f,0.9796f,0.0769f,
-0.3583f,0.9217f,0.1484f,
-0.5171f,0.8286f,0.2142f,
-0.6561f,0.704f,0.2717f,
-0.7699f,0.5528f,0.3189f,
-0.8544f,0.3805f,0.3539f,
-0.9063f,0.1939f,0.3754f,
-0.9239f,0f,0.3827f,
-0.9063f,-0.1939f,0.3754f,
-0.8544f,-0.3805f,0.3539f,
-0.7699f,-0.5528f,0.3189f,
-0.6561f,-0.704f,0.2717f,
-0.5171f,-0.8286f,0.2142f,
-0.3583f,-0.9217f,0.1484f,
-0.1856f,-0.9796f,0.0769f,
-0.1971f,0.9796f,0.0392f,
-0.3804f,0.9217f,0.0757f,
-0.549f,0.8286f,0.1092f,
-0.6965f,0.704f,0.1385f,
-0.8173f,0.5528f,0.1626f,
-0.907f,0.3805f,0.1804f,
-0.9622f,0.1939f,0.1914f,
-0.9808f,0f,0.1951f,
-0.9622f,-0.1939f,0.1914f,
-0.907f,-0.3805f,0.1804f,
-0.8173f,-0.5528f,0.1626f,
-0.6965f,-0.704f,0.1385f,
-0.549f,-0.8286f,0.1092f,
-0.3804f,-0.9217f,0.0757f,
-0.1971f,-0.9796f,0.0392f,
-0.201f,0.9796f,0f,
-0.3879f,0.9217f,0f,
-0.5598f,0.8286f,0f,
-0.7101f,0.704f,0f,
-0.8333f,0.5528f,0f,
-0.9247f,0.3805f,0f,
-0.981f,0.1939f,0f,
-1f,0f,0f,
-0.981f,-0.1939f,0f,
-0.9247f,-0.3805f,0f,
-0.8333f,-0.5528f,0f,
-0.7101f,-0.704f,0f,
-0.5598f,-0.8286f,0f,
-0.3879f,-0.9217f,0f,
-0.201f,-0.9796f,0f,
-0.1971f,0.9796f,-0.0392f,
-0.3804f,0.9217f,-0.0757f,
-0.549f,0.8286f,-0.1092f,
-0.6965f,0.704f,-0.1385f,
-0.8173f,0.5528f,-0.1626f,
-0.907f,0.3805f,-0.1804f,
-0.9622f,0.1939f,-0.1914f,
-0.9808f,0f,-0.1951f,
-0.9622f,-0.1939f,-0.1914f,
-0.907f,-0.3805f,-0.1804f,
-0.8173f,-0.5528f,-0.1626f,
-0.6965f,-0.704f,-0.1385f,
-0.549f,-0.8286f,-0.1092f,
-0.3804f,-0.9217f,-0.0757f,
-0.1971f,-0.9796f,-0.0392f,
-0.1856f,0.9796f,-0.0769f,
-0.3583f,0.9217f,-0.1484f,
-0.5171f,0.8286f,-0.2142f,
-0.6561f,0.704f,-0.2717f,
-0.7699f,0.5528f,-0.3189f,
-0.8544f,0.3805f,-0.3539f,
-0.9063f,0.1939f,-0.3754f,
-0.9239f,0f,-0.3827f,
-0.9063f,-0.1939f,-0.3754f,
-0.8544f,-0.3805f,-0.3539f,
-0.7699f,-0.5528f,-0.3189f,
-0.6561f,-0.704f,-0.2717f,
-0.5171f,-0.8286f,-0.2142f,
-0.3583f,-0.9217f,-0.1484f,
-0.1856f,-0.9796f,-0.0769f,
-0.1671f,0.9796f,-0.1116f,
-0.3225f,0.9217f,-0.2155f,
-0.4654f,0.8286f,-0.311f,
-0.5904f,0.704f,-0.3945f,
-0.6929f,0.5528f,-0.463f,
-0.7689f,0.3805f,-0.5137f,
-0.8157f,0.1939f,-0.545f,
-0.8314f,0f,-0.5556f,
-0.8157f,-0.1939f,-0.545f,
-0.7689f,-0.3805f,-0.5137f,
-0.6929f,-0.5528f,-0.463f,
-0.5904f,-0.704f,-0.3945f,
-0.4654f,-0.8286f,-0.311f,
-0.3225f,-0.9217f,-0.2155f,
-0.1671f,-0.9796f,-0.1116f,
-0.1421f,0.9796f,-0.1421f,
-0.2743f,0.9217f,-0.2743f,
-0.3958f,0.8286f,-0.3958f,
-0.5021f,0.704f,-0.5021f,
-0.5893f,0.5528f,-0.5893f,
-0.6539f,0.3805f,-0.6539f,
-0.6937f,0.1939f,-0.6937f,
-0.7071f,0f,-0.7071f,
-0.6937f,-0.1939f,-0.6937f,
-0.6539f,-0.3805f,-0.6539f,
-0.5893f,-0.5528f,-0.5893f,
-0.5021f,-0.704f,-0.5021f,
-0.3958f,-0.8286f,-0.3958f,
-0.2743f,-0.9217f,-0.2743f,
-0.1421f,-0.9796f,-0.1421f,
-0.1116f,0.9796f,-0.1671f,
-0.2155f,0.9217f,-0.3225f,
-0.311f,0.8286f,-0.4654f,
-0.3945f,0.704f,-0.5904f,
-0.463f,0.5528f,-0.6929f,
-0.5137f,0.3805f,-0.7689f,
-0.545f,0.1939f,-0.8157f,
-0.5556f,0f,-0.8314f,
-0.545f,-0.1939f,-0.8157f,
-0.5137f,-0.3805f,-0.7689f,
-0.463f,-0.5528f,-0.6929f,
-0.3945f,-0.704f,-0.5904f,
-0.311f,-0.8286f,-0.4654f,
-0.2155f,-0.9217f,-0.3225f,
-0.1116f,-0.9796f,-0.1671f,
-0.0769f,0.9796f,-0.1856f,
-0.1484f,0.9217f,-0.3583f,
-0.2142f,0.8286f,-0.5171f,
-0.2717f,0.704f,-0.6561f,
-0.3189f,0.5528f,-0.7699f,
-0.3539f,0.3805f,-0.8544f,
-0.3754f,0.1939f,-0.9063f,
-0.3827f,0f,-0.9239f,
-0.3754f,-0.1939f,-0.9063f,
-0.3539f,-0.3805f,-0.8544f,
-0.3189f,-0.5528f,-0.7699f,
-0.2717f,-0.704f,-0.6561f,
-0.2142f,-0.8286f,-0.5171f,
-0.1484f,-0.9217f,-0.3583f,
-0.0769f,-0.9796f,-0.1856f,
-0.0392f,0.9796f,-0.1971f,
-0.0757f,0.9217f,-0.3804f,
-0.1092f,0.8286f,-0.549f,
-0.1385f,0.704f,-0.6965f,
-0.1626f,0.5528f,-0.8173f,
-0.1804f,0.3805f,-0.907f,
-0.1914f,0.1939f,-0.9622f,
-0.1951f,0f,-0.9808f,
-0.1914f,-0.1939f,-0.9622f,
-0.1804f,-0.3805f,-0.907f,
-0.1626f,-0.5528f,-0.8173f,
-0.1385f,-0.704f,-0.6965f,
-0.1092f,-0.8286f,-0.549f,
-0.0757f,-0.9217f,-0.3804f,
-0.0392f,-0.9796f,-0.1971f,
0f,-0.3805f,-0.9247f,
0f,-0.5528f,-0.8333f,
0f,-0.704f,-0.7101f,
0f,-0.9217f,-0.3879f,
0f,-0.9796f,-0.201f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
-0.8333f,-0.5528f,0f,
-0.7101f,0.704f,0f,
-0.7101f,-0.704f,0f,
-0.8333f,0.5528f,0f,
-0.5598f,-0.8286f,0f,
-0.9247f,0.3805f,0f,
-0.3879f,-0.9217f,0f,
-0.981f,0.1939f,0f,
-0.201f,-0.9796f,0f,
-1f,0f,0f,
-0.201f,0.9796f,0f,
0f,1f,0f,
0f,-1f,0f,
-0.981f,-0.1939f,0f,
-0.3879f,0.9217f,0f,
-0.9247f,-0.3805f,0f,
-0.5598f,0.8286f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,1f,0f,
0f,-1f,0f,
0f,1f,0f,
0f,-1f,0f,
                };
                return normals;
            }
            else if (geometry == Geometries.Octahedron)
            {
                float[] normals =
                {
                  0,1,-1,
                  0,1,-1,
                  0,1,-1,

                   0,1,1,
                  0,1,1,
                  0,1,1,

                  -1,1,0,
                  -1,1,0,
                  -1,1,0,

                   1,1,0,
                   1,1,0,
                   1,1,0,

                    0,-1,-1,
                  0,-1,-1,
                  0,-1,-1,

                   0,-1,1,
                  0,-1,1,
                  0,-1,1,

                  -1,-1,0,
                  -1,-1,0,
                  -1,-1,0,

                   1,-1,0,
                   1,-1,0,
                   1,-1,0,

                };
                return normals;
            }
            else if (geometry == Geometries.HexagonalPrism)
            {
                float[] normals =
                {
                0,0,-1,
                0,0,-1,
                0,0,-1,
                0,0,-1,

                0,0,1,
                0,0,1,
                0,0,1,
                0,0,1,

                -1,0,-1,
                -1,0,-1,
                -1,0,-1,
                -1,0,-1,

                1,0,1,
                1,0,1,
                1,0,1,
                1,0,1,

                -1,0,1,
                -1,0,1,
                -1,0,1,
                -1,0,1,

                1,0,-1,
                1,0,-1,
                1,0,-1,
                1,0,-1,

                0,1,0,
                0,1,0,
                0,1,0,
                0,1,0,
                0,1,0,
                0,1,0,

                0,-1,0,
                0,-1,0,
                0,-1,0,
                0,-1,0,
                0,-1,0,
                0,-1,0,
                };
                return normals;
            }
            else
            {
                return null;
            }
        }
        public static int[] GetIndices(Geometries geometry)
        {
            if (geometry == Geometries.Quad)
            {
                int[] indices =
                {
                0,1,3,
                3,1,2,
                };
                return indices;
            }
            else if (geometry == Geometries.Triangle)
            {
                int[] indices =
                {
                0,1,2
                };
                return indices;
            }
            else if (geometry == Geometries.Cube)
            {
                int[] indices = {
                0,1,3,
                3,1,2,
                4,5,7,
                7,5,6,
                8,9,11,
                11,9,10,
                12,13,15,
                15,13,14,
                16,17,19,
                19,17,18,
                20,21,23,
                23,21,22
        };
                return indices;
            }
            else if (geometry == Geometries.Tetrahedron)
            {
                int[] indices =
                {
                0,1,2,
                3,4,5,
                6,7,8,
                9,10,11,
                };
                return indices;
            }
            else if (geometry == Geometries.Pyramid)
            {
                int[] indices =
                {
                0,1,2,
                3,4,5,
                6,7,8,
                9,10,11,
                12,13,15,
                15,13,14,
                };
                return indices;
            }
            else if (geometry == Geometries.Sphere)
            {
                int[] indices =
                {
                   7,18,8,
0,11,1,
8,19,477,
2,11,12,
477,20,478,
2,13,3,
478,21,479,
3,14,4,
479,22,9,
4,15,5,
9,23,480,
5,16,6,
480,24,481,
6,17,7,
0,296,10,
205,481,24,
23,39,24,
16,32,17,
10,482,25,
483,24,39,
18,32,33,
10,26,11,
19,33,34,
11,27,12,
19,35,20,
12,28,13,
21,35,36,
13,29,14,
21,37,22,
14,30,15,
22,38,23,
15,31,16,
36,50,51,
28,44,29,
36,52,37,
29,45,30,
37,53,38,
31,45,46,
38,54,39,
31,47,32,
25,484,40,
485,39,54,
32,48,33,
25,41,26,
33,49,34,
26,42,27,
35,49,50,
27,43,28,
40,486,55,
487,54,69,
47,63,48,
40,56,41,
48,64,49,
41,57,42,
50,64,65,
42,58,43,
50,66,51,
43,59,44,
51,67,52,
44,60,45,
52,68,53,
45,61,46,
53,69,54,
47,61,62,
59,73,74,
67,81,82,
59,75,60,
68,82,83,
60,76,61,
68,84,69,
62,76,77,
55,488,70,
489,69,84,
62,78,63,
55,71,56,
63,79,64,
56,72,57,
65,79,80,
57,73,58,
65,81,66,
77,93,78,
70,86,71,
78,94,79,
71,87,72,
80,94,95,
72,88,73,
81,95,96,
74,88,89,
81,97,82,
74,90,75,
83,97,98,
76,90,91,
83,99,84,
76,92,77,
70,490,85,
491,84,99,
96,112,97,
89,105,90,
97,113,98,
91,105,106,
99,113,114,
91,107,92,
85,492,100,
493,99,114,
92,108,93,
85,101,86,
93,109,94,
86,102,87,
95,109,110,
88,102,103,
96,110,111,
88,104,89,
100,116,101,
108,124,109,
101,117,102,
110,124,125,
102,118,103,
110,126,111,
103,119,104,
112,126,127,
104,120,105,
113,127,128,
106,120,121,
114,128,129,
106,122,107,
100,494,115,
495,114,129,
108,122,123,
119,135,120,
127,143,128,
121,135,136,
129,143,144,
121,137,122,
115,496,130,
497,129,144,
122,138,123,
116,130,131,
123,139,124,
116,132,117,
125,139,140,
117,133,118,
125,141,126,
119,133,134,
127,141,142,
138,154,139,
132,146,147,
140,154,155,
132,148,133,
140,156,141,
133,149,134,
141,157,142,
134,150,135,
143,157,158,
136,150,151,
143,159,144,
136,152,137,
130,498,145,
499,144,159,
137,153,138,
130,146,131,
157,173,158,
151,165,166,
158,174,159,
151,167,152,
145,500,160,
501,159,174,
153,167,168,
145,161,146,
153,169,154,
146,162,147,
155,169,170,
147,163,148,
155,171,156,
149,163,164,
157,171,172,
149,165,150,
169,185,170,
162,178,163,
170,186,171,
163,179,164,
172,186,187,
164,180,165,
172,188,173,
166,180,181,
174,188,189,
166,182,167,
160,502,175,
503,174,189,
167,183,168,
160,176,161,
168,184,169,
161,177,162,
189,203,204,
181,197,182,
175,504,190,
505,189,204,
183,197,198,
175,191,176,
183,199,184,
176,192,177,
185,199,200,
178,192,193,
185,201,186,
179,193,194,
187,201,202,
179,195,180,
187,203,188,
181,195,196,
192,209,193,
200,217,201,
193,210,194,
202,217,218,
194,211,195,
202,219,203,
196,211,212,
203,220,204,
196,213,197,
190,506,206,
507,204,220,
197,214,198,
190,207,191,
198,215,199,
192,207,208,
200,215,216,
212,228,213,
206,508,221,
509,220,235,
213,229,214,
206,222,207,
214,230,215,
207,223,208,
216,230,231,
208,224,209,
216,232,217,
209,225,210,
217,233,218,
210,226,211,
218,234,219,
212,226,227,
220,234,235,
231,247,232,
224,240,225,
233,247,248,
225,241,226,
233,249,234,
227,241,242,
235,249,250,
227,243,228,
221,510,236,
511,235,250,
228,244,229,
221,237,222,
229,245,230,
223,237,238,
231,245,246,
224,238,239,
236,512,251,
513,250,265,
243,259,244,
236,252,237,
244,260,245,
237,253,238,
246,260,261,
239,253,254,
246,262,247,
240,254,255,
247,263,248,
240,256,241,
248,264,249,
242,256,257,
249,265,250,
242,258,243,
255,269,270,
262,278,263,
255,271,256,
264,278,279,
257,271,272,
265,279,280,
257,273,258,
251,514,266,
515,265,280,
259,273,274,
251,267,252,
259,275,260,
252,268,253,
261,275,276,
254,268,269,
261,277,262,
273,289,274,
266,282,267,
274,290,275,
267,283,268,
276,290,291,
268,284,269,
276,292,277,
270,284,285,
278,292,293,
270,286,271,
278,294,279,
272,286,287,
280,294,295,
272,288,273,
266,516,281,
517,280,295,
292,309,293,
285,302,286,
293,310,294,
287,302,303,
294,311,295,
288,303,304,
281,518,297,
519,295,311,
288,305,289,
281,298,282,
289,306,290,
282,299,283,
291,306,307,
284,299,300,
291,308,292,
285,300,301,
305,321,306,
298,314,299,
307,321,322,
300,314,315,
307,323,308,
301,315,316,
308,324,309,
301,317,302,
310,324,325,
303,317,318,
310,326,311,
303,319,304,
297,520,312,
521,311,326,
304,320,305,
297,313,298,
325,339,340,
318,332,333,
326,340,341,
318,334,319,
312,522,327,
523,326,341,
319,335,320,
312,328,313,
320,336,321,
313,329,314,
322,336,337,
315,329,330,
323,337,338,
316,330,331,
323,339,324,
316,332,317,
328,344,329,
337,351,352,
330,344,345,
337,353,338,
331,345,346,
338,354,339,
331,347,332,
340,354,355,
333,347,348,
340,356,341,
333,349,334,
327,524,342,
525,341,356,
334,350,335,
328,342,343,
335,351,336,
348,362,363,
355,371,356,
348,364,349,
342,526,357,
527,356,371,
350,364,365,
343,357,358,
350,366,351,
343,359,344,
352,366,367,
345,359,360,
352,368,353,
345,361,346,
354,368,369,
346,362,347,
355,369,370,
528,381,382,
529,374,375,
528,383,530,
531,375,376,
530,384,532,
531,377,533,
534,384,385,
535,377,378,
534,386,536,
535,379,537,
538,539,372,
540,536,386,
541,379,380,
542,372,373,
541,381,543,
542,374,544,
385,401,386,
378,394,379,
372,545,387,
546,386,401,
379,395,380,
372,388,373,
380,396,381,
373,389,374,
382,396,397,
375,389,390,
382,398,383,
375,391,376,
383,399,384,
376,392,377,
385,399,400,
378,392,393,
390,404,405,
397,413,398,
391,405,406,
398,414,399,
391,407,392,
400,414,415,
393,407,408,
400,416,401,
393,409,394,
387,547,402,
548,401,416,
395,409,410,
387,403,388,
395,411,396,
389,403,404,
397,411,412,
408,424,409,
402,549,417,
550,416,431,
410,424,425,
402,418,403,
410,426,411,
403,419,404,
412,426,427,
404,420,405,
412,428,413,
406,420,421,
413,429,414,
406,422,407,
414,430,415,
408,422,423,
415,431,416,
427,443,428,
421,435,436,
429,443,444,
421,437,422,
429,445,430,
423,437,438,
430,446,431,
424,438,439,
417,551,432,
552,431,446,
424,440,425,
417,433,418,
425,441,426,
418,434,419,
427,441,442,
419,435,420,
553,446,461,
439,455,440,
433,447,448,
440,456,441,
434,448,449,
442,456,457,
435,449,450,
442,458,443,
436,450,451,
443,459,444,
436,452,437,
444,460,445,
438,452,453,
445,461,446,
438,454,439,
432,554,447,
458,474,459,
451,467,452,
459,475,460,
453,467,468,
461,475,476,
453,469,454,
447,555,462,
556,461,476,
454,470,455,
447,463,448,
455,471,456,
448,464,449,
457,471,472,
449,465,450,
457,473,458,
451,465,466,
463,0,1,
470,477,471,
464,1,2,
472,477,478,
465,2,3,
472,479,473,
466,3,4,
473,9,474,
467,4,5,
474,480,475,
468,5,6,
475,481,476,
469,6,7,
462,557,0,
558,476,481,
469,8,470,
7,17,18,
0,10,11,
8,18,19,
2,1,11,
477,19,20,
2,12,13,
478,20,21,
3,13,14,
479,21,22,
4,14,15,
9,22,23,
5,15,16,
480,23,24,
6,16,17,
23,38,39,
16,31,32,
18,17,32,
10,25,26,
19,18,33,
11,26,27,
19,34,35,
12,27,28,
21,20,35,
13,28,29,
21,36,37,
14,29,30,
22,37,38,
15,30,31,
36,35,50,
28,43,44,
36,51,52,
29,44,45,
37,52,53,
31,30,45,
38,53,54,
31,46,47,
32,47,48,
25,40,41,
33,48,49,
26,41,42,
35,34,49,
27,42,43,
47,62,63,
40,55,56,
48,63,64,
41,56,57,
50,49,64,
42,57,58,
50,65,66,
43,58,59,
51,66,67,
44,59,60,
52,67,68,
45,60,61,
53,68,69,
47,46,61,
59,58,73,
67,66,81,
59,74,75,
68,67,82,
60,75,76,
68,83,84,
62,61,76,
62,77,78,
55,70,71,
63,78,79,
56,71,72,
65,64,79,
57,72,73,
65,80,81,
77,92,93,
70,85,86,
78,93,94,
71,86,87,
80,79,94,
72,87,88,
81,80,95,
74,73,88,
81,96,97,
74,89,90,
83,82,97,
76,75,90,
83,98,99,
76,91,92,
96,111,112,
89,104,105,
97,112,113,
91,90,105,
99,98,113,
91,106,107,
92,107,108,
85,100,101,
93,108,109,
86,101,102,
95,94,109,
88,87,102,
96,95,110,
88,103,104,
100,115,116,
108,123,124,
101,116,117,
110,109,124,
102,117,118,
110,125,126,
103,118,119,
112,111,126,
104,119,120,
113,112,127,
106,105,120,
114,113,128,
106,121,122,
108,107,122,
119,134,135,
127,142,143,
121,120,135,
129,128,143,
121,136,137,
122,137,138,
116,115,130,
123,138,139,
116,131,132,
125,124,139,
117,132,133,
125,140,141,
119,118,133,
127,126,141,
138,153,154,
132,131,146,
140,139,154,
132,147,148,
140,155,156,
133,148,149,
141,156,157,
134,149,150,
143,142,157,
136,135,150,
143,158,159,
136,151,152,
137,152,153,
130,145,146,
157,172,173,
151,150,165,
158,173,174,
151,166,167,
153,152,167,
145,160,161,
153,168,169,
146,161,162,
155,154,169,
147,162,163,
155,170,171,
149,148,163,
157,156,171,
149,164,165,
169,184,185,
162,177,178,
170,185,186,
163,178,179,
172,171,186,
164,179,180,
172,187,188,
166,165,180,
174,173,188,
166,181,182,
167,182,183,
160,175,176,
168,183,184,
161,176,177,
189,188,203,
181,196,197,
183,182,197,
175,190,191,
183,198,199,
176,191,192,
185,184,199,
178,177,192,
185,200,201,
179,178,193,
187,186,201,
179,194,195,
187,202,203,
181,180,195,
192,208,209,
200,216,217,
193,209,210,
202,201,217,
194,210,211,
202,218,219,
196,195,211,
203,219,220,
196,212,213,
197,213,214,
190,206,207,
198,214,215,
192,191,207,
200,199,215,
212,227,228,
213,228,229,
206,221,222,
214,229,230,
207,222,223,
216,215,230,
208,223,224,
216,231,232,
209,224,225,
217,232,233,
210,225,226,
218,233,234,
212,211,226,
220,219,234,
231,246,247,
224,239,240,
233,232,247,
225,240,241,
233,248,249,
227,226,241,
235,234,249,
227,242,243,
228,243,244,
221,236,237,
229,244,245,
223,222,237,
231,230,245,
224,223,238,
243,258,259,
236,251,252,
244,259,260,
237,252,253,
246,245,260,
239,238,253,
246,261,262,
240,239,254,
247,262,263,
240,255,256,
248,263,264,
242,241,256,
249,264,265,
242,257,258,
255,254,269,
262,277,278,
255,270,271,
264,263,278,
257,256,271,
265,264,279,
257,272,273,
259,258,273,
251,266,267,
259,274,275,
252,267,268,
261,260,275,
254,253,268,
261,276,277,
273,288,289,
266,281,282,
274,289,290,
267,282,283,
276,275,290,
268,283,284,
276,291,292,
270,269,284,
278,277,292,
270,285,286,
278,293,294,
272,271,286,
280,279,294,
272,287,288,
292,308,309,
285,301,302,
293,309,310,
287,286,302,
294,310,311,
288,287,303,
288,304,305,
281,297,298,
289,305,306,
282,298,299,
291,290,306,
284,283,299,
291,307,308,
285,284,300,
305,320,321,
298,313,314,
307,306,321,
300,299,314,
307,322,323,
301,300,315,
308,323,324,
301,316,317,
310,309,324,
303,302,317,
310,325,326,
303,318,319,
304,319,320,
297,312,313,
325,324,339,
318,317,332,
326,325,340,
318,333,334,
319,334,335,
312,327,328,
320,335,336,
313,328,329,
322,321,336,
315,314,329,
323,322,337,
316,315,330,
323,338,339,
316,331,332,
328,343,344,
337,336,351,
330,329,344,
337,352,353,
331,330,345,
338,353,354,
331,346,347,
340,339,354,
333,332,347,
340,355,356,
333,348,349,
334,349,350,
328,327,342,
335,350,351,
348,347,362,
355,370,371,
348,363,364,
350,349,364,
343,342,357,
350,365,366,
343,358,359,
352,351,366,
345,344,359,
352,367,368,
345,360,361,
354,353,368,
346,361,362,
355,354,369,
528,543,381,
529,544,374,
528,382,383,
531,529,375,
530,383,384,
531,376,377,
534,532,384,
535,533,377,
534,385,386,
535,378,379,
541,537,379,
542,538,372,
541,380,381,
542,373,374,
385,400,401,
378,393,394,
379,394,395,
372,387,388,
380,395,396,
373,388,389,
382,381,396,
375,374,389,
382,397,398,
375,390,391,
383,398,399,
376,391,392,
385,384,399,
378,377,392,
390,389,404,
397,412,413,
391,390,405,
398,413,414,
391,406,407,
400,399,414,
393,392,407,
400,415,416,
393,408,409,
395,394,409,
387,402,403,
395,410,411,
389,388,403,
397,396,411,
408,423,424,
410,409,424,
402,417,418,
410,425,426,
403,418,419,
412,411,426,
404,419,420,
412,427,428,
406,405,420,
413,428,429,
406,421,422,
414,429,430,
408,407,422,
415,430,431,
427,442,443,
421,420,435,
429,428,443,
421,436,437,
429,444,445,
423,422,437,
430,445,446,
424,423,438,
424,439,440,
417,432,433,
425,440,441,
418,433,434,
427,426,441,
419,434,435,
439,454,455,
433,432,447,
440,455,456,
434,433,448,
442,441,456,
435,434,449,
442,457,458,
436,435,450,
443,458,459,
436,451,452,
444,459,460,
438,437,452,
445,460,461,
438,453,454,
458,473,474,
451,466,467,
459,474,475,
453,452,467,
461,460,475,
453,468,469,
454,469,470,
447,462,463,
455,470,471,
448,463,464,
457,456,471,
449,464,465,
457,472,473,
451,450,465,
463,462,0,
470,8,477,
464,463,1,
472,471,477,
465,464,2,
472,478,479,
466,465,3,
473,479,9,
467,466,4,
474,9,480,
468,467,5,
475,480,481,
469,468,6,
469,7,8,
                };
                return indices;
            }
            else if (geometry == Geometries.Octahedron)
            {
                int[] indices =
                {
                0,1,2,
                3,4,5,
                6,7,8,
                9,10,11,
                12,13,14,
                15,16,17,
                18,19,20,
                21,22,23,
                };
                return indices;
            }
            else if (geometry == Geometries.HexagonalPrism)
            {
                int[] indices = {
                0,1,3,
                3,1,2,

                4,5,7,
                7,5,6,

                8,9,11,
                11,9,10,

                12,13,15,
                15,13,14,

                16,17,19,
                19,17,18,

                20,21,23,
                23,21,22,

                24,25,26,
                24,26,29,
                29,26,27,
                29,27,28,

                 30,31,32,
                30,32,35,
                35,32,33,
                35,33,34,

        };
                return indices;
            }
            else
            {
                return null;
            }
        }
        public static LoaderVertex GetVertex(Geometries geometry)
        {
            LoaderVertex vertex = new LoaderVertex(GetVertices(geometry), GetTextureCoordinates(geometry), GetNormals(geometry), GetIndices(geometry));
            return vertex;
        }
        public static string GetVertexName(Geometries geometry)
        {
            return geometry.ToString();
        }
    }
}
